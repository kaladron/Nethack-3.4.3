#! /bin/sh -e
## 90_enh_hpmon.dpatch by Ralph Churchill <mrchucho@yahoo.com>
## from: http://www.netsonic.fi/~walker/nh/hpmon.diff
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Enables color HP monitor for textmode NetHack.

if [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch -f --no-backup-if-mismatch -p1 < $0;;
    -unpatch) patch -f --no-backup-if-mismatch -R -p1 < $0;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1;;
esac

exit 0

--- nh342orig/src/botl.c	2003-08-30 03:07:27.000000000 +0300
+++ nh342hpmon/src/botl.c	2003-09-05 18:17:09.000000000 +0300
@@ -3,6 +3,7 @@
 /* NetHack may be freely redistributed.  See license for details. */
 
 #include "hack.h"
+#include "wintty.h"
 
 #ifdef OVL0
 extern const char *hu_stat[];  /* defined in eat.c */
@@ -248,6 +248,9 @@
 	char  newbot2[MAXCO];
 	register char *nb;
 	int hp, hpmax;
+#if defined(HPMON) && !defined(LISP_GRAPHICS)
+	int hpcolor, hpattr;
+#endif
 	int cap = near_capacity();
 
 	hp = Upolyd ? u.mh : u.uhp;
@@ -256,6 +259,15 @@
 	if(hp < 0) hp = 0;
 	(void) describe_level(newbot2);
 	Sprintf(nb = eos(newbot2),
+#ifdef HPMON
+		"%c:%-2ld HP:", oc_syms[COIN_CLASS],
+#ifndef GOLDOBJ
+		u.ugold
+#else
+		money_cnt(invent)
+#endif
+		);
+#else /* HPMON */
 		"%c:%-2ld HP:%d(%d) Pw:%d(%d) AC:%-2d", oc_syms[COIN_CLASS],
 #ifndef GOLDOBJ
 		u.ugold,
@@ -263,6 +275,39 @@
 		money_cnt(invent),
 #endif
 		hp, hpmax, u.uen, u.uenmax, u.uac);
+#endif /* HPMON */
+#ifdef HPMON
+	curs(WIN_STATUS, 1, 1);
+	putstr(WIN_STATUS, 0, newbot2);
+
+	Sprintf(nb = eos(newbot2), "%d(%d)", hp, hpmax);
+#if defined(TEXTCOLOR) && !defined(LISP_GRAPHICS)
+	if (iflags.use_color && iflags.use_hpmon) {
+	  curs(WIN_STATUS, 1, 1);
+	  hpattr = ATR_NONE;
+	  if(hp == hpmax){
+	    hpcolor = NO_COLOR;
+	  } else if(hp > (hpmax*2/3)) {
+	    hpcolor = CLR_GREEN;
+	  } else if(hp <= (hpmax/3)) {
+	    hpcolor = CLR_RED;
+	    if(hp<=(hpmax/10)) 
+	      hpattr = ATR_BLINK;
+	  } else {
+	    hpcolor = CLR_YELLOW;
+	  }
+	  if (hpcolor != NO_COLOR)
+	    term_start_color(hpcolor);
+	  if(hpattr!=ATR_NONE)term_start_attr(hpattr);
+	  putstr(WIN_STATUS, hpattr, newbot2);
+	  if(hpattr!=ATR_NONE)term_end_attr(hpattr);
+	  if (hpcolor != NO_COLOR)
+	    term_end_color();
+	}
+#endif /* TEXTCOLOR */
+	Sprintf(nb = eos(newbot2), " Pw:%d(%d) AC:%-2d",
+		u.uen, u.uenmax, u.uac);
+#endif /* HPMON */
 
 	if (Upolyd)
 		Sprintf(nb = eos(nb), " HD:%d", mons[u.umonnum].mlevel);
--- nethack/include/config.h~	2003-10-12 15:47:13.000000000 -0700
+++ nethack/include/config.h	2003-10-12 15:49:18.000000000 -0700
@@ -345,6 +345,9 @@
 
 #define EXP_ON_BOTL	/* Show experience on bottom line */
 #define PARANOID
+
+#define HPMON           /* Color HP monitor */
+
 /* #define SCORE_ON_BOTL */	/* added by Gary Erickson (erickson@ucivax) */
 
 /*
--- nethack/src/options.c~	2003-10-12 16:05:42.000000000 -0700
+++ nethack/src/options.c	2003-10-12 16:06:44.000000000 -0700
@@ -86,6 +86,9 @@
 #else
 	{"extmenu", (boolean *)0, FALSE, SET_IN_FILE},
 #endif
+#if defined(TEXTCOLOR) && defined(HPMON)
+        { "hpmon", &iflags.use_hpmon, FALSE, SET_IN_GAME},
+#endif
 #ifdef OPT_DISPMAP
 	{"fast_map", &flags.fast_map, TRUE, SET_IN_GAME},
 #else
--- nethack/include/flag.h~	2003-10-12 16:04:12.000000000 -0700
+++ nethack/include/flag.h	2003-10-12 16:05:17.000000000 -0700
@@ -217,6 +217,11 @@
 	boolean lan_mail;	/* mail is initialized */
 	boolean lan_mail_fetched; /* mail is awaiting display */
 #endif
+
+#if defined(HPMON) && defined(TEXTCOLOR)
+        boolean use_hpmon;
+#endif
+
 /*
  * Window capability support.
  */
--- nethack/dat/opthelp~	2003-10-12 16:16:39.000000000 -0700
+++ nethack/dat/opthelp	2003-10-12 16:16:09.000000000 -0700
@@ -71,6 +71,9 @@
 color      use different colors for objects on screen   [TRUE for micros]
 hilite_pet display pets in a highlighted manner                   [FALSE]
 
+Boolean option if HPMON was set at compile time:
+hpmon      color HP readout depending on how low it is            [FALSE]
+
 Boolean option if TIMED_DELAY was set at compile time (tty interface only):
 timed_delay    on unix and VMS, use a timer instead of sending
                extra screen output when attempting to pause for
--- nethack/doc/Guidebook.txt~	2003-10-12 16:10:21.000000000 -0700
+++ nethack/doc/Guidebook.txt	2003-10-12 16:14:39.000000000 -0700
@@ -2338,6 +2338,11 @@
                Name  your starting horse (ex. ``horsename:Trigger'').  Can-
                not be set with the `O' command.
 
+          hpmon
+               Colors your hitpoint reading green when you attain <= 2/3  of
+               your total HP, yellow when you reach <= 1/3 of total, and red
+               when you are at or below 1/10 of your total HP.
+               
           IBMgraphics
                Use a predefined selection of IBM extended ASCII  characters
                to  display  the  dungeon/effects/traps instead of having to
--- nethack/doc/Guidebook.mn~	2003-10-12 16:10:32.000000000 -0700
+++ nethack/doc/Guidebook.mn	2003-10-12 16:15:11.000000000 -0700
@@ -1800,6 +1800,10 @@
 .lp horsename
 Name your starting horse (ex. ``horsename:Trigger'').
 Cannot be set with the `O' command.
+.lp hpmon
+Colors your HP reading green when you attain <= 2/3 of your total HP,
+yellow when you reach <= 1/3 of total, and red when you are at or below
+1/10 of your total HP.
 .lp IBMgraphics
 Use a predefined selection of IBM extended ASCII characters to display the
 dungeon/effects/traps instead of having to define a full graphics set
--- nethack/doc/Guidebook.tex~	2003-10-12 16:10:38.000000000 -0700
+++ nethack/doc/Guidebook.tex	2003-10-12 16:15:28.000000000 -0700
@@ -2229,6 +2229,11 @@
 Name your starting horse (ex.\ ``{\tt horsename:Trigger}'').
 Cannot be set with the `{\tt O}' command.
 %.lp
+\item[\ib{hpmon}]
+Colors your HP reading green when you attain <= 2/3 of your total HP,
+yellow when you reach <= 1/3 of total, and red when you are at or below
+1/10 of your total HP.
+%.lp
 \item[\ib{IBMgraphics}]
 Use a predefined selection of IBM extended ASCII characters to display the
 dungeon/effects/traps instead of having to define a full graphics set
